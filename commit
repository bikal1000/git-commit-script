#!/usr/bin/env bash

# Define commit types
commit_types=("Add" "Change" "Fix" "Refactor")

# Prompt for commit type
echo "Select commit type:"
select commit_type in "${commit_types[@]}"
do
    if [[ " ${commit_types[@]} " =~ " ${commit_type} " ]]; then
        break
    else
        echo "Invalid selection. Please try again."
    fi
done

# Prompt for scope
read -e -p "Enter scope: " scope
# Replace spaces with hyphens in the scope
scope="${scope// /-}"

# Prompt for commit message
read -e -p "Enter commit message: " commit_message

# Get the task ID from the branch name
branch_name=$(git rev-parse --abbrev-ref HEAD)
if [[ "$branch_name" =~ [A-Z]+-[0-9]+ ]]; then
    task_id=${BASH_REMATCH[0]}
    formatted_commit="$commit_type($scope): $commit_message #$task_id"
else
    formatted_commit="$commit_type($scope): $commit_message"
fi

# Commit the changes
git commit -m "$formatted_commit"

# Push if -p flag is provided
if [[ "$1" == "-p" ]]; then
    git push origin "$branch_name"
fi
